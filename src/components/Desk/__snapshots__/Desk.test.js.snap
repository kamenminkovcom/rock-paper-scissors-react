// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Desk/> Should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Desk
    history={Array []}
    isPlaying={true}
    playFunc={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="desk-half"
>
          <WithCondition
                    shouldShow={true}
          />
          <WithCondition
                    playFunc={[Function]}
                    shouldShow={false}
          />
          <WithCondition
                    message={false}
                    result={false}
                    shouldShow={false}
          />
          <WithCondition
                    classes="history-header"
                    count={0}
                    shouldShow={false}
          />
</div>,
        <div
          className="desk-half"
>
          
</div>,
      ],
      "className": "desk",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithCondition
              shouldShow={true}
/>,
            <WithCondition
              playFunc={[Function]}
              shouldShow={false}
/>,
            <WithCondition
              message={false}
              result={false}
              shouldShow={false}
/>,
            <WithCondition
              classes="history-header"
              count={0}
              shouldShow={false}
/>,
          ],
          "className": "desk-half",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "shouldShow": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "playFunc": [Function],
              "shouldShow": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "message": false,
              "result": false,
              "shouldShow": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "classes": "history-header",
              "count": 0,
              "shouldShow": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "desk-half",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="desk-half"
>
            <WithCondition
                        shouldShow={true}
            />
            <WithCondition
                        playFunc={[Function]}
                        shouldShow={false}
            />
            <WithCondition
                        message={false}
                        result={false}
                        shouldShow={false}
            />
            <WithCondition
                        classes="history-header"
                        count={0}
                        shouldShow={false}
            />
</div>,
          <div
            className="desk-half"
>
            
</div>,
        ],
        "className": "desk",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithCondition
                shouldShow={true}
/>,
              <WithCondition
                playFunc={[Function]}
                shouldShow={false}
/>,
              <WithCondition
                message={false}
                result={false}
                shouldShow={false}
/>,
              <WithCondition
                classes="history-header"
                count={0}
                shouldShow={false}
/>,
            ],
            "className": "desk-half",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "shouldShow": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "playFunc": [Function],
                "shouldShow": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "message": false,
                "result": false,
                "shouldShow": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "classes": "history-header",
                "count": 0,
                "shouldShow": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "desk-half",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
