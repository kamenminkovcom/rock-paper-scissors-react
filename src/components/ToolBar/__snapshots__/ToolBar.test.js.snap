// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ToolBar/> Should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ToolBar
    choseHandType={[Function]}
    handTypes={
        Array [
            "paper",
            "rock",
            "scissors",
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <HandButton
          handType="paper"
          handleClick={[Function]}
/>,
        <HandButton
          handType="rock"
          handleClick={[Function]}
/>,
        <HandButton
          handType="scissors"
          handleClick={[Function]}
/>,
      ],
      "className": "tool-bar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "paper",
        "nodeType": "function",
        "props": Object {
          "handType": "paper",
          "handleClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "rock",
        "nodeType": "function",
        "props": Object {
          "handType": "rock",
          "handleClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "scissors",
        "nodeType": "function",
        "props": Object {
          "handType": "scissors",
          "handleClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <HandButton
            handType="paper"
            handleClick={[Function]}
/>,
          <HandButton
            handType="rock"
            handleClick={[Function]}
/>,
          <HandButton
            handType="scissors"
            handleClick={[Function]}
/>,
        ],
        "className": "tool-bar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "paper",
          "nodeType": "function",
          "props": Object {
            "handType": "paper",
            "handleClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "rock",
          "nodeType": "function",
          "props": Object {
            "handType": "rock",
            "handleClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "scissors",
          "nodeType": "function",
          "props": Object {
            "handType": "scissors",
            "handleClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
